name: Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        type: string

permissions:
  checks: write
  id-token: write
  contents: write
  pull-requests: write

jobs:
  release:
    name: Bump and create PR
    runs-on: ubuntu-latest

    outputs:
      pr: ${{ steps.pr.outputs.result }}

    steps:
      - name: Print dispatch event payload
        run: |
          echo "version: ${{ inputs.version }}"

      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Create and checkout branch
        run: git checkout -b chore/bump-components-${{ inputs.version }}

      - name: Commit and push changes
        run: |
          echo "a" >> test.txt
          git config --global user.email "mnagy112@gmail.com"
          git config --global user.name "Test Bot"
          git add test.txt
          git commit -m "feat: bump"
          git push --set-upstream origin chore/bump-components-${{ inputs.version }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ACTIONS_SYSTEM_USER }}

      - name: Create Pull Request
        uses: actions/github-script@v6
        id: pr
        with:
          script: |
            const { repo, owner } = context.repo;

            const pr = await github.rest.pulls.create({
              title: 'feat: bump components (${{ inputs.version }})',
              owner,
              repo,
              head: 'chore/bump-components-${{ inputs.version }}',
              base: 'master',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: pr.data.number,
              labels: ['bump']
            });

            const result = await github.rest.checks.create({
              owner,
              repo,
              name: 'call-tests',
              head_sha: pr.data.head.sha,
              status: 'in_progress',
              started_at: new Date()
            });
            
            return { checkId: result.data.id, sha: pr.data.head.sha };

      - name: Get result
        run: | 
          echo "${{steps.pr.outputs.result}}"
          echo "${{fromJson(steps.pr.outputs.result).sha}}"
          echo "${{fromJson(steps.pr.outputs.result).checkId}}"

  test:
    needs:
      - release
    uses: ./.github/workflows/test.yml
    with:
      ref: ${{fromJson(needs.release.outputs.pr).sha}}

  complete:
    needs:
      - release
      - test
    runs-on: ubuntu-latest

    steps:
      - name: Finish run
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;

            github.rest.checks.update({
              owner,
              repo,
              check_run_id: '${{ fromJson(needs.release.outputs.pr).checkId }}',
              name: 'call-tests',
              head_sha: '${{ fromJson(needs.release.outputs.pr).sha }}',
              status: 'completed',
              completed_at: new Date(),
              conclusion: 'success',
              output: {
                title: 'call-tests',
                summary: 'Success',
                annotations: []
              }
            });

  failure:
    needs:
      - release
      - test
    if: failure()
    runs-on: ubuntu-latest

    steps:
      - name: Finish run
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;

            github.rest.checks.update({
              owner,
              repo,
              check_run_id: '${{ fromJson(needs.release.outputs.pr).checkId }}',
              name: 'call-tests',
              head_sha: '${{ fromJson(needs.release.outputs.pr).sha }}',
              status: 'completed',
              completed_at: new Date(),
              conclusion: 'failure',
              output: {
                title: 'call-tests',
                summary: 'Failed',
                annotations: []
              }
            });
