name: Create prod release

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  release:
    name: Create release from version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install
        run: npm install -D git-raw-commits conventional-commits-parser conventional-changelog-writer conventional-changelog-conventionalcommits

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PERSONAL_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
          
            const { getRawCommitsStream } = await import('git-raw-commits');
            const { parseCommitsStream } = await import('conventional-commits-parser');
            const { writeChangelogStream } = await import('conventional-changelog-writer');
            const createPreset = await import('conventional-changelog-conventionalcommits');
            
            const { data: release } = await github.rest.repos.getLatestRelease({
              owner,
              repo,
            });
            
            const preset = await createPreset();
            
            const commits = await new Promise((resolve, reject) => {
              const result = [];
            
              getRawCommitsStream({ from: release ? release.tag_name : '', to: 'v1.19.0 })
                .pipe(parseCommitsStream(preset.parser))
                .pipe(writeChangelogStream(undefined, preset.writer))
                .on('data', (data) => result.push(data))
                .on('end', () => resolve(result))
                .on('error', reject)
            });

            await github.rest.repos.createRelease({
              owner,
              repo,
              name: 'v1.19.0',
              tag_name: 'v1.19.0',
              body: commits.join('\n')
            });
