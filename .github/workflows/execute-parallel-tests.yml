name: release
on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: write

jobs:
  check-cache:
    name: Check for existing build
    runs-on: ubuntu-latest

    outputs:
      CACHE_HIT: ${{ steps.check-build.outputs.cache-hit }}

    steps:
      - name: Check for existing build
        id: check-build
        uses: actions/cache/restore@v3
        with:
          path: build
          key: build-dev

  build-frontend:
    name: Build
    runs-on: ubuntu-latest
    needs: check-cache
    if: ${{ needs.check-cache.outputs.CACHE_HIT != 'true' }}

    steps:
      - name: Create cache
        run: |
          mkdir build
          echo test >> build/sample.txt

      - name: Cache build result
        uses: actions/cache/save@v3
        env:
          cache-name: frontend-build
        with:
          path: build
          key: build-dev

  load-cache:
    name: Check for existing build
    runs-on: ubuntu-latest
    needs:
      - check-cache
      - build-frontend
    if: always() && ['skipped', 'success'].includes(needs.build-frontend.outcome) && needs.check-cache.outcome == 'success'


    steps:
      - name: Check for existing build
        uses: actions/cache/restore@v3
        with:
          path: build
          key: build-dev

      - name: List result
        run: |
          ls -la
          ls -la build

